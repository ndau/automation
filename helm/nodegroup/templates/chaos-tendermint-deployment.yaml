{{ if .Values.chaos.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint
  labels:
    app: {{ template "nodeGroup.name" . }}
    chart: {{ template "nodeGroup.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nodeGroup.name" . }}-chaos-tendermint
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "nodeGroup.name" . }}-chaos-tendermint
        release: {{ .Release.Name }}
    spec:
      initContainers:
      # Uses chaosnode image to get empty hash and saves it
      - name: noms-wait
        image: "{{ .Values.ndau.deployUtils.image.repository }}:{{ .Values.ndau.deployUtils.image.tag }}"
        imagePullPolicy: {{ .Values.ndau.deployUtils.image.pullPolicy }}
        command: ["sh", "-c", "echo starting noms wait loop; until curl -v {{ template "nodeGroup.fullname" . }}-chaos-noms-service:{{ .Values.chaos.noms.port }} --connect-timeout 5; do echo waiting for {{ template "nodeGroup.fullname" . }}-chaos-noms-service; sleep 5; done;"]
      - name: hash
        image: "{{ .Values.chaosnode.image.repository }}:{{ .Values.chaosnode.image.tag }}"
        imagePullPolicy: {{ .Values.chaos.tendermint.image.pullPolicy }}
        command: ["/bin/sh"]
        args: [
          "-c",
          "/bin/chaosnode -echo-hash -spec http://{{ template "nodeGroup.fullname" . }}-chaos-noms-service:{{ .Values.chaos.noms.port }} >&1 | tail -n 1 | tr -d '[:space:]' > /tendermint/empty_hash",
        ]
        env:
        - name: HONEYCOMB_KEY
          value: {{ .Values.chaos.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.chaos.honeycomb.dataset }}
        volumeMounts:
        - name: tendermint-home-volume
          mountPath: /tendermint
      # copy/ammend read only config files to real config folder
      - name: config
        image: {{ .Values.chaos.deployUtils.image.repository }}:{{ .Values.chaos.deployUtils.image.tag }}
        imagePullPolicy: {{ .Values.chaos.deployUtils.image.pullPolicy }}
        command: ["/bin/sh", "/tendermint/init.sh"]
        env:
        - name: UPDATE_PERSISTENT_PEERS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-peers
              key: updatePeerAddresses
        - name: PERSISTENT_PEERS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-peers
              key: addresses
        - name: PRIVATE_PEER_IDS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-peers
              key: privatePeerIds
        volumeMounts:
        - name: tendermint-home-volume
          mountPath: /tendermint
        - name: tendermint-init
          mountPath: /tendermint/init.sh
          subPath: init.sh
        - name: genesis-json
          mountPath: /tendermint/config-ro/genesis.json
          subPath: genesis.json
        - name: node-key-json
          mountPath: /tendermint/config-ro/node_key.json
          subPath: node_key.json
        - name: priv-json
          mountPath: /tendermint/config-ro/priv_validator.json
          subPath: priv_validator.json
        - name: config-toml
          mountPath: /tendermint/config-ro/config.toml
          subPath: config.toml
      containers:
      - name: tendermint
        image: "{{ .Values.chaos.tendermint.image.repository }}:{{ .Values.chaos.tendermint.image.tag }}"
        command: ["/bin/sh"]
        args: ["-c", "tendermint node --moniker={{ .Values.chaos.tendermint.moniker }} --p2p.private_peer_ids \"$(cat /tendermint/config/private-peer-ids)\" --p2p.persistent_peers \"$(cat /tendermint/config/persistent-peers)\""]
        imagePullPolicy: {{ .Values.chaos.tendermint.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.chaos.tendermint.ports.p2p }}
          - containerPort: {{ .Values.chaos.tendermint.ports.rpc }}
        volumeMounts:
        - mountPath: /tendermint
          name: tendermint-home-volume
        env:
        - name: TMHOME
          value: "/tendermint"
        - name: HONEYCOMB_KEY
          value: {{ .Values.chaos.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.chaos.honeycomb.dataset }}
      volumes:
        - name: tendermint-home-volume
          persistentVolumeClaim:
            claimName: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-claim
        - name: tendermint-init
          configMap:
            name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-config
            items:
            - key: init.sh
              path: init.sh
        - name: config-toml
          configMap:
            name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-config
            items:
            - key: config.toml
              path: config.toml
        - name: genesis-json
          configMap:
            name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-config
            items:
            - key: genesis.json
              path: genesis.json
        - name: priv-json
          configMap:
            name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-config
            items:
            - key: priv_validator.json
              path: priv_validator.json
        - name: node-key-json
          configMap:
            name: {{ template "nodeGroup.fullname" . }}-chaos-tendermint-config
            items:
            - key: node_key.json
              path: node_key.json



{{ end }}
