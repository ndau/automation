{{ if .Values.chaos.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nodegroup.fullname" . }}-chaos-redis
  labels:
    app: {{ template "nodegroup.name" . }}
    chart: {{ template "nodegroup.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nodegroup.name" . }}-chaos-redis
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "nodegroup.name" . }}-chaos-redis
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.minikube }}
      imagePullSecrets:
      - name: awsecr-cred
      {{ end }}
      terminationGracePeriodSeconds: 120 # 2 minutes. Increase grace period from default 30 seconds for snapshot creation.
      containers:
      - name: redis
        image: "{{ .Values.chaos.redis.image.repository }}:{{ .Values.chaos.redis.image.tag }}"
        imagePullPolicy: {{ .Values.chaos.redis.image.pullPolicy }}
        command:
          - sh
          - -c
          - |-
            redis-server \
              --dir /redis \
              --save 60 1 \
              --tcp-backlog 128 \
              --port {{ .Values.ndau.redis.port }} &
            PID=$!
            delayed_shutdown() {
              sleep 110 # sleep for almost 2 minutes
              kill $PID
            }
            trap delayed_shutdown SIGTERM

            while true; do sleep 42; done
        env:
        - name: NDAUHOME
          value: /redis
        ports:
        - containerPort: {{ .Values.chaos.redis.port }}
        volumeMounts:
        - name: redis-volume
          mountPath: /redis
      volumes:
      - name: redis-volume
        persistentVolumeClaim:
          claimName: {{ template "nodegroup.fullname" . }}-chaos-redis-claim
      resources:
        requests:
          memory: {{ .Values.chaos.redis.resources.requests.memory }}
          cpu: {{ .Values.chaos.redis.resources.requests.cpu }}
        limits:
          memory: {{ .Values.chaos.redis.resources.limits.memory }}
          cpu: {{ .Values.chaos.redis.resources.limits.cpu }}

{{ end }}
