{{ if .Values.ndau.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nodegroup.fullname" . }}-ndau-tendermint
  labels:
    app: {{ template "nodegroup.name" . }}
    chart: {{ template "nodegroup.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nodegroup.name" . }}-ndau-tendermint
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "nodegroup.name" . }}-ndau-tendermint
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.minikube }}
      imagePullSecrets:
      - name: awsecr-cred
      {{ end }}
      initContainers:
      - name: waits
        image: "{{ .Values.ndau.deployUtils.image.repository }}:{{ .Values.ndau.deployUtils.image.tag }}"
        imagePullPolicy: {{ .Values.ndau.deployUtils.image.pullPolicy }}
        command: ["/bin/bash", "/root/startup-waits.sh"]
        volumeMounts:
        - mountPath: /root/startup-waits.sh
          name: ndau-tendermint-config
          subPath: startup-waits.sh
      - name: hash # Uses ndaunode image to get the app hash and saves it
        image: "{{ .Values.ndaunode.image.repository }}:{{ .Values.ndaunode.image.tag }}"
        imagePullPolicy: {{ .Values.ndaunode.image.pullPolicy }}
        command:
          - /bin/sh
          - -c
          - /bin/ndaunode -echo-hash -spec http://{{ template "nodegroup.fullname" . }}-ndau-noms-service:{{ .Values.ndau.noms.port }} >&1 | tail -n 1 | tr -d '[:space:]' > /tendermint/app_hash
        env:
        - name: HONEYCOMB_KEY
          value: {{ .Values.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.honeycomb.dataset }}
        volumeMounts:
        - name: tendermint-home-volume
          mountPath: /tendermint
      containers:
      - name: tendermint
        image: "{{ .Values.ndau.tendermint.image.repository }}:{{ .Values.ndau.tendermint.image.tag }}"
        command: ["/bin/bash", "/root/tendermint-start.sh"]
        imagePullPolicy: {{ .Values.ndau.tendermint.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.ndau.tendermint.ports.p2p }}
          - containerPort: {{ .Values.ndau.tendermint.ports.rpc }}
        volumeMounts:
        # home volume
        - name: tendermint-home-volume
          mountPath: /tendermint

        # scripts
        - mountPath: /root/shutdown-waits.sh
          name: ndau-tendermint-config
          subPath: shutdown-waits.sh
        - mountPath: /root/startup-waits.sh
          name: ndau-tendermint-config
          subPath: startup-waits.sh
        - mountPath: /root/make-snapshot.sh
          name: ndau-tendermint-config
          subPath: make-snapshot.sh
        - mountPath: /root/tendermint-init.sh
          name: nodegroup-config
          subPath: tendermint-init.sh
        - mountPath: /root/tendermint-start.sh
          name: nodegroup-config
          subPath: tendermint-start.sh
        - mountPath: /root/restore-snapshot.sh
          name: nodegroup-config
          subPath: restore-snapshot.sh
        - mountPath: /root/redis-cli.sh
          name: nodegroup-config
          subPath: redis-cli.sh

        # read only config files
        - mountPath: /root/config-ro/genesis.json
          name: ndau-tendermint-config
          subPath: genesis.json
        - mountPath: /root/config-ro/node_key.json
          name: ndau-tendermint-config
          subPath: node_key.json
        - mountPath: /root/config-ro/priv_validator_key.json
          name: ndau-tendermint-config
          subPath: priv_validator_key.json
        - mountPath: /root/data-ro/priv_validator_state.json
          name: ndau-tendermint-config
          subPath: priv_validator_state.json
        - mountPath: /root/config-ro/config.toml
          name: ndau-tendermint-config
          subPath: config.toml
        readinessProbe:
          tcpSocket:
            port: {{ .Values.ndau.tendermint.ports.p2p }}
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          tcpSocket:
            port: {{ .Values.ndau.tendermint.ports.p2p }}
          initialDelaySeconds: 30
          periodSeconds: 30
        env:
        - name: SNAPSHOTGUN_ENABLED
          value: "{{ .Values.snapshot.enabled }}"
        - name: AWS_KEY
          value: {{ .Values.aws.accessKeyID }}
        - name: AWS_SECRET
          value: {{ .Values.aws.secretAccessKey }}
        - name: R_HOST # for snapshot coordination
          value: {{ template "nodegroup.fullname" . }}-snapshot-redis
        - name: TMHOME
          value: "/tendermint"
        - name: THIS_SERVICE
          value: ndau-tm
        - name: CHAIN
          value: "ndau"
        - name: HONEYCOMB_KEY
          value: {{ .Values.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.honeycomb.dataset }}
        - name: NODE_ID
          value: {{ .Values.ndau.tendermint.moniker }}
        - name: PERSISTENT_PEERS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
              key: persistentPeers
        - name: SNAPSHOT_CODE
          value: {{ .Values.ndau.noms.snapshotCode }}
      volumes:
        - name: tendermint-home-volume
          persistentVolumeClaim:
            claimName: {{ template "nodegroup.fullname" . }}-ndau-tendermint-claim
        - name: ndau-tendermint-config
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
        - name: nodegroup-config
          configMap:
            name: {{ template "nodegroup.fullname" . }}-nodegroup-config
      resources:
        requests:
          memory: {{ .Values.ndau.tendermint.resources.requests.memory }}
          cpu: {{ .Values.ndau.tendermint.resources.requests.cpu }}
        limits:
          memory: {{ .Values.ndau.tendermint.resources.limits.memory }}
          cpu: {{ .Values.ndau.tendermint.resources.limits.cpu }}

{{ end }}
