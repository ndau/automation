{{ if .Values.ndau.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nodegroup.fullname" . }}-ndau-tendermint
  labels:
    app: {{ template "nodegroup.name" . }}
    chart: {{ template "nodegroup.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nodegroup.name" . }}-ndau-tendermint
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "nodegroup.name" . }}-ndau-tendermint
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.minikube }}
      imagePullSecrets:
      - name: awsecr-cred
      {{ end }}
      initContainers:
      - name: waits
        image: "{{ .Values.ndau.deployUtils.image.repository }}:{{ .Values.ndau.deployUtils.image.tag }}"
        imagePullPolicy: {{ .Values.ndau.deployUtils.image.pullPolicy }}
        command:
          - sh
          - -c
          - |-
            # wait for redis
            echo starting redis wait loop
            until nc -z -w 1 {{ template "nodegroup.fullname" . }}-ndau-redis-service {{ .Values.ndau.redis.port }}; do
              echo waiting for {{ template "nodegroup.fullname" . }}-ndau-redis-service
              sleep 2
            done

            # wait for noms
            echo starting noms wait loop
            until nc -z -w 1 {{ template "nodegroup.fullname" . }}-ndau-noms-service {{ .Values.ndau.noms.port }}; do
              echo waiting for {{ template "nodegroup.fullname" . }}-ndau-noms-service
              sleep 2
            done

            # wait for node app
            echo starting node app wait loop
            until nc -z -w 1 {{ template "nodegroup.fullname" . }}-ndaunode-service {{ .Values.ndaunode.port }}; do
              echo waiting for {{ template "nodegroup.fullname" . }}-ndaunode-service
              sleep 2
            done

      - name: hash # Uses ndaunode image to get the app hash and saves it
        image: "{{ .Values.ndaunode.image.repository }}:{{ .Values.ndaunode.image.tag }}"
        imagePullPolicy: {{ .Values.ndaunode.image.pullPolicy }}
        command: ["/bin/sh"]
        args: [
          "-c",
          "/bin/ndaunode -echo-hash -spec http://{{ template "nodegroup.fullname" . }}-ndau-noms-service:{{ .Values.ndau.noms.port }} >&1 | tail -n 1 | tr -d '[:space:]' > /tendermint/app_hash",
        ]
        env:
        - name: HONEYCOMB_KEY
          value: {{ .Values.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.honeycomb.dataset }}
        volumeMounts:
        - name: tendermint-home-volume
          mountPath: /tendermint
      containers:

      - name: tendermint
        image: "{{ .Values.ndau.tendermint.image.repository }}:{{ .Values.ndau.tendermint.image.tag }}"
        command: ["/bin/sh"]
        args: ["/root/tendermint-start.sh"]
        imagePullPolicy: {{ .Values.ndau.tendermint.image.pullPolicy }}
        ports:
          - containerPort: {{ .Values.ndau.tendermint.ports.p2p }}
          - containerPort: {{ .Values.ndau.tendermint.ports.rpc }}
        volumeMounts:
        # home volume
        - name: tendermint-home-volume
          mountPath: /tendermint

        # scripts
        - name: make-snapshot-sh
          mountPath: /root/make-snapshot.sh
          subPath: make-snapshot.sh
        - name: tendermint-init-sh
          mountPath: /root/tendermint-init.sh
          subPath: tendermint-init.sh
        - name: tendermint-start-sh
          mountPath: /root/tendermint-start.sh
          subPath: tendermint-start.sh
        - name: restore-snapshot-sh
          mountPath: /root/restore-snapshot.sh
          subPath: restore-snapshot.sh
        - name: redis-cli-sh
          mountPath: /root/redis-cli.sh
          subPath: redis-cli.sh

        # read only config files
        - name: genesis-json
          mountPath: /root/config-ro/genesis.json
          subPath: genesis.json
        - name: node-key-json
          mountPath: /root/config-ro/node_key.json
          subPath: node_key.json
        - name: priv-validator-key-json
          mountPath: /root/config-ro/priv_validator_key.json
          subPath: priv_validator_key.json
        - name: priv-validator-state-json
          mountPath: /root/data-ro/priv_validator_state.json
          subPath: priv_validator_state.json
        - name: config-toml
          mountPath: /root/config-ro/config.toml
          subPath: config.toml
        readinessProbe:
          tcpSocket:
            port: {{ .Values.ndau.tendermint.ports.p2p }}
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: {{ .Values.ndau.tendermint.ports.p2p }}
          initialDelaySeconds: 10
          periodSeconds: 10
        env:
        - name: SNAPSHOTGUN_ENABLED
          value: "{{ .Values.snapshot.enabled }}"
        - name: AWS_KEY
          value: {{ .Values.aws.accessKeyID }}
        - name: AWS_SECRET
          value: {{ .Values.aws.secretAccessKey }}
        - name: R_HOST # for snapshot coordination
          value: {{ template "nodegroup.fullname" . }}-snapshot-redis
        - name: TMHOME
          value: "/tendermint"
        - name: THIS_SERVICE
          value: ndau-tm
        - name: CHAIN
          value: "ndau"
        - name: HONEYCOMB_KEY
          value: {{ .Values.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.honeycomb.dataset }}
        - name: NODE_ID
          value: {{ .Values.ndau.tendermint.moniker }}
        - name: UPDATE_PERSISTENT_PEERS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-peers
              key: updatePeerAddresses
        - name: PERSISTENT_PEERS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-peers
              key: addresses
        - name: PRIVATE_PEER_IDS
          valueFrom:
            configMapKeyRef:
              name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-peers
              key: privatePeerIds
        - name: SNAPSHOT_CODE
          value: {{ .Values.ndau.noms.snapshotCode }}
      volumes:
        - name: tendermint-home-volume
          persistentVolumeClaim:
            claimName: {{ template "nodegroup.fullname" . }}-ndau-tendermint-claim

        # read only config files
        - name: config-toml
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
            items:
            - key: config.toml
              path: config.toml
        - name: genesis-json
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
            items:
            - key: genesis.json
              path: genesis.json
        - name: priv-validator-key-json
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
            items:
            - key: priv_validator_key.json
              path: priv_validator_key.json
        - name: priv-validator-state-json
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
            items:
            - key: priv_validator_state.json
              path: priv_validator_state.json
        - name: node-key-json
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
            items:
            - key: node_key.json
              path: node_key.json

        # Scripts
        - name: make-snapshot-sh
          configMap:
            name: {{ template "nodegroup.fullname" . }}-ndau-tendermint-config
            items:
            - key: make-snapshot.sh
              path: make-snapshot.sh
        - name: restore-snapshot-sh
          configMap:
            name: {{ template "nodegroup.fullname" . }}-nodegroup-config
            items:
            - key: restore-snapshot.sh
              path: restore-snapshot.sh
        - name: redis-cli-sh
          configMap:
            name: {{ template "nodegroup.fullname" . }}-nodegroup-config
            items:
            - key: redis-cli.sh
              path: redis-cli.sh
        - name: tendermint-init-sh
          configMap:
            name: {{ template "nodegroup.fullname" . }}-nodegroup-config
            items:
            - key: tendermint-init.sh
              path: tendermint-init.sh
        - name: tendermint-start-sh
          configMap:
            name: {{ template "nodegroup.fullname" . }}-nodegroup-config
            items:
            - key: tendermint-start.sh
              path: tendermint-start.sh
      resources:
        requests:
          memory: {{ .Values.ndau.tendermint.resources.requests.memory }}
          cpu: {{ .Values.ndau.tendermint.resources.requests.cpu }}
        limits:
          memory: {{ .Values.ndau.tendermint.resources.limits.memory }}
          cpu: {{ .Values.ndau.tendermint.resources.limits.cpu }}

{{ end }}
