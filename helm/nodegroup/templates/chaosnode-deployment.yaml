{{ if .Values.chaos.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nodeGroup.fullname" . }}-chaosnode
  labels:
    app: {{ template "nodeGroup.name" . }}
    chart: {{ template "nodeGroup.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nodeGroup.name" . }}-chaosnode
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "nodeGroup.name" . }}-chaosnode
        release: {{ .Release.Name }}
    spec:
      initContainers:
      - name: noms-wait
        image: "{{ .Values.chaos.deployUtils.image.repository }}:{{ .Values.chaos.deployUtils.image.tag }}"
        imagePullPolicy: {{ .Values.chaos.deployUtils.image.pullPolicy }}
        command: ["sh", "-c", "echo Starting noms wait loop; until curl -v {{ template "nodeGroup.fullname" . }}-chaos-noms-service:{{ .Values.chaos.noms.port }} --connect-timeout 5; do echo waiting for {{ template "nodeGroup.fullname" . }}-chaos-noms-service; sleep 5; done;"]
      containers:
      - name: chaosnode
        image: "{{ .Values.chaosnode.image.repository }}:{{ .Values.chaosnode.image.tag }}"
        imagePullPolicy: {{ .Values.chaosnode.image.pullPolicy }}
        args: [
          "-spec", "http://{{ template "nodeGroup.fullname" . }}-chaos-noms-service:{{ .Values.chaos.noms.port }}",
          "-addr", "0.0.0.0:{{ required ".Values.chaosnode.port required" .Values.chaosnode.port }}",
          "-index", "{{ template "nodeGroup.fullname" . }}-chaos-redis-service:{{ .Values.chaos.redis.port }}"]
        ports:
        - containerPort: {{ .Values.chaosnode.port }}
        env:
        - name: HONEYCOMB_KEY
          value: {{ .Values.chaos.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.chaos.honeycomb.dataset }}
        - name: NDAUHOME
          value: "/root/.ndau"
        volumeMounts:
        - mountPath: "/root/.ndau"
          name: ndau-home-volume
      volumes:
      - name: ndau-home-volume
        persistentVolumeClaim:
          claimName: {{ template "nodeGroup.fullname" . }}-chaosnode-claim


{{ end }}
