{{ if .Values.chaos.enabled }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "nodegroup.fullname" . }}-chaosnode
  labels:
    app: {{ template "nodegroup.name" . }}
    chart: {{ template "nodegroup.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "nodegroup.name" . }}-chaosnode
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "nodegroup.name" . }}-chaosnode
        release: {{ .Release.Name }}
    spec:
      {{ if .Values.minikube }}
      imagePullSecrets:
      - name: awsecr-cred
      {{ end }}
      initContainers:
      - name: waits
        image: "{{ .Values.chaos.deployUtils.image.repository }}:{{ .Values.chaos.deployUtils.image.tag }}"
        imagePullPolicy: {{ .Values.chaos.deployUtils.image.pullPolicy }}
        command:
          - /bin/bash
          - -c
          - |-
            >&2 /bin/bash /root/startup-waits.sh

            # get ndau's tendermint address
            fullname="{{ template "nodegroup.fullname" . }}"
            RELEASE=$(echo ${fullname//-/_} | awk '{print toupper($0)}')
            HOST_VAR=${RELEASE}_NDAU_TENDERMINT_SERVICE_SERVICE_HOST
            RPC_PORT_VAR=${RELEASE}_NDAU_TENDERMINT_SERVICE_SERVICE_PORT_RPC
            host=${!HOST_VAR}
            rpc_port=${!RPC_PORT_VAR}

            ndau_address=http://${host}:${rpc_port}

            printf $ndau_address > /root/.ndau/ndau-address

        volumeMounts:
        - mountPath: "/root/.ndau"
          name: ndau-home-volume
        - mountPath: /root/startup-waits.sh
          name: chaosnode-config
          subPath: startup-waits.sh
      containers:
      - name: chaosnode
        image: "{{ .Values.chaosnode.image.repository }}:{{ .Values.chaosnode.image.tag }}"
        imagePullPolicy: {{ .Values.chaosnode.image.pullPolicy }}
        command: ["/bin/bash", "/root/chaosnode-start.sh"]
        ports:
        - containerPort: {{ .Values.chaosnode.port }}
        env:
        - name: THIS_SERVICE
          value: chaosnode
        - name: HONEYCOMB_KEY
          value: {{ .Values.honeycomb.key }}
        - name: HONEYCOMB_DATASET
          value: {{ .Values.honeycomb.dataset }}
        - name: NODE_ID
          value: {{ .Values.chaos.tendermint.moniker }}
        - name: NDAUHOME
          value: "/root/.ndau"
        volumeMounts:
        - mountPath: /root/.ndau
          name: ndau-home-volume
        - mountPath: /root/shutdown-waits.sh
          name: chaosnode-config
          subPath: shutdown-waits.sh
        - mountPath: /root/redis-cli.sh
          name: nodegroup-config
          subPath: redis-cli.sh
        - mountPath: /root/chaosnode-start.sh
          name: chaosnode-config
          subPath: chaosnode-start.sh
        - mountPath: /root/startup-waits.sh
          name: chaosnode-config
          subPath: startup-waits.sh
        readinessProbe:
          tcpSocket:
            port: {{ .Values.chaosnode.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          tcpSocket:
            port: {{ .Values.chaosnode.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          requests:
            memory: {{ .Values.chaosnode.resources.requests.memory }}
            cpu: {{ .Values.chaosnode.resources.requests.cpu }}
          limits:
            memory: {{ .Values.chaosnode.resources.limits.memory }}
            cpu: {{ .Values.chaosnode.resources.limits.cpu }}
      volumes:
      - name: ndau-home-volume
        persistentVolumeClaim:
          claimName: {{ template "nodegroup.fullname" . }}-chaosnode-claim
      - name: chaosnode-config
        configMap:
          name: {{ template "nodegroup.fullname" . }}-chaosnode-config
      - name: nodegroup-config
        configMap:
          name: {{ template "nodegroup.fullname" . }}-nodegroup-config

{{ end }}
